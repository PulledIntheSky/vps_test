name: Setup Cloudflare Tunnel for RDP

on:
  push:
    branches:
      - main  # Run the workflow on push to the main branch

jobs:
  setup-tunnel:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js 20
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install Express, node-pty, and ws
        run: |
          npm install express node-pty ws

      - name: Run Express server
        run: |
          nohup node server.js &

      - name: Install Cloudflared
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

          sudo ufw allow 3000/tcp
          sudo ufw reload

      - name: Authenticate Cloudflared
        run: cloudflared tunnel login
        env:
          CLOUDFLARE_AUTH_TOKEN: ${{ secrets.CLOUDFLARE_AUTH_TOKEN }}

      - name: Create Cloudflare Tunnel
        run: |
          cloudflared tunnel create my-tunnel
          cloudflared tunnel list | grep my-tunnel > tunnel_info.txt
          TUNNEL_ID=$(awk '{print $1}' tunnel_info.txt)
          echo "Tunnel ID: $TUNNEL_ID"  # For debugging
          echo "TUNNEL_ID=$TUNNEL_ID" >> $GITHUB_ENV

      - name: Move Tunnel Credentials
        run: |
          sudo mkdir -p /etc/cloudflared
          sudo mv ~/.cloudflared/${{ env.TUNNEL_ID }}.json /etc/cloudflared/${{ env.TUNNEL_ID }}.json

      - name: Retrieve Public IPv4 and IPv6 addresses
        id: get-public-ips
        run: |
          IPv4=$(curl -s https://ipinfo.io/ip)
          IPv6=$(curl -s https://api64.ipify.org)
          echo "Public IPv4: $IPv4"
          echo "Public IPv6: $IPv6"
          echo "PUBLIC_IPV4=$IPv4" >> $GITHUB_ENV
          echo "PUBLIC_IPV6=$IPv6" >> $GITHUB_ENV

      - name: Configure Tunnel
        run: |
          echo "tunnel: ${{ env.TUNNEL_ID }}" > config.yml
          echo "credentials-file: /etc/cloudflared/${{ env.TUNNEL_ID }}.json" >> config.yml
          echo "ingress:" >> config.yml
          echo "  - hostname: $IPv4" >> config.yml  # Replace with your domain
          echo "    service: http://localhost:3000" >> config.yml
          echo "  - service: http_status:404" >> config.yml
          sudo mv config.yml /etc/cloudflared/

      - name: Update Cloudflare DNS with IPv4
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"type":"A","name":"'"${{ env.PUBLIC_IPV4 }}"'","content":"'"${{ env.TUNNEL_ID }}.cfargotunnel.com"'","proxied":true,"ttl":120}'
      
      - name: Start Cloudflare Tunnel
        run: cloudflared tunnel run my-tunnel
